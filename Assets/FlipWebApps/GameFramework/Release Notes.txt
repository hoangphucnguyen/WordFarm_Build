IMPORTANT NOTE: Before upgrading always take a backup copy. If upgrade errors occur then delete the old /FlipWebApps folder to cater for possible conflicts and import the asset again.
	
- - - - - - - - - -

CHANGE LOG

v4.3.1

	Game Framework Core - Improvements
	- Demo: Updated for new GameManager changes
	- GameStructure: GameItem cleanup - the InitialiseXxx() loadFromResources parameter no longer does anything. Either subclass the GameItem if you need custom data or call LoadData() on the GameItem manually.
	- GameStructure: GameItem LoadGameItemExtension and ClearGameItemExtension methods added
	- GameStructure: LoadJsonData() return type changed to void. Reference GameItem.JsonData instead.
	- GameStructure: Improved GameManager Player, World, Level and Character setup options and editor (see any editor warnings for any small changes to make in the component inspector).
	- GameStructure: GameItemsManager Added LoadAutomatic() method for loading of automatically setup GameItems. 
	- GameStructure: GameItemsManager Load() loadFromResources and valueToUnlock parameters no longer do anything as replaced by GameItem configuration files..
	- Localisation: Added modifier to LocaliseText for auto conversion to Upper and Lower case
	- Localisation: Allow for a pre-localisation callback to modify the localised value
	- Localisation: Added modifier to LocaliseText for auto conversion toTitle case
		
	Game Framework Core - Fixes
	- Localisation: Added missing French translations
	- UI: DialogInstance fix for handling localisation key passed as an empty string.

	Game Framework Tutorials (Extras Bundle) - Improvements
	- Various: Updated for latest GameManeger improvements
	- Localisation: Updated demo to show upper / lower case modifiers and pre-localisation callback

	Game Framework Tutorials (Extras Bundle) - Fixes
	- Localisation: Demo fixes for incorrect Chinese flag override and removed Player setup warning.

	PlayMaker Actions for Game Framework (Extras Bundle) - Improvements
	- Added Actions: LevelGetCoins, LevelSetCoins, LevelChangeCoins
	- Added LevelChangeScore and LevelSetScore
	- Added Actions: LevelIsStarWon
	- Added Actions: PlayerGetScore, PlayerSetScore, PlayerChangeScore
	- Added Actions: PlayerGetCoins, PlayerSetCoins, PlayerChangeCoins
	- Added Actions: PlayerGetHealth, PlayerSetHealth, PlayerChangeHealth
	- Added Actions: PlayerGetLives, PlayerSetLives, PlayerChangeLives
	- Changed Actions: LevelGetScore parameters changed for consistency
	
v4.3

	Game Framework Core - Improvements
	- Animation: Added GameObjectToGameObjectAnimation class for animation between two gameobjects
	- Audio: Display GameManager audio source warning only on first use rather than always.
	- Game Framework: Added Component Help window including a number of documentation updates.
	- GameStructure: GameItem with missing resource files warnings are aggregated to avoid spamming the console.
	- GameStructure: Variables - added support for Bool, Vector2 and Vector3 variables
	- GameStructure: New Collider components Win Level, Lose Level, Star
	- GameStructure: New Collider custom editor window
	- GameStructure: Added options to pause the time when showing the GameOver window.
	- GameStructure: Removed periodic update in favour of messaging.
	- GameStructure: ShowPrefab and EnableBasedUponXxx support animated changes.
	- GameStructure: If no GameItems are loaded from resources then the first rather than selected is forced unlocked (with button select mode it is valid that selected is locked)
	- GameStructure: Added messages for Level Started, Ended, Paused, Resumed
	- Localisation: Vietnamese Translation added. Many thanks to Truong Giang for this contribution
	- Preferences: Added support for Bool, Vector2 and Vector3 preferences when using PlayerPrefs.
	- UI: Dialog Ok, Cancel, Yes, No buttons will fall back to text buttons if a custom version is not present.
	- UI: Standardised the order of buttons with negative option on the right
		
	Game Framework Core - Fixes
	- Advertising: Fix for missing using statements when enabling AdMob integration
	- EditorExtras: HelpBoxDecotarorDrawer uses the correct height.
	- Facebook: Fix compile error when enabling Facebook integration.
	- GameStructure: Variables - fix for non string variables marked as persisting not being saved / loaded correctly.
	
	Game Framework Extras (Extras Bundle) - Improvements
	- Themes: Standardised the order of buttons om GeneralMessage dialogs with negative option on the right

	Game Framework Tutorials (Extras Bundle) - Improvements
	- Getting Started Tutorial: Tutorial updates to remove warnings and for latest changes
	- Dialogs: Updated tutorial to show different dialog types.
	- Localisation Demo: Included Vietnamese localisation

	Prefs Editor (Extras Bundle) - Improvements
	- Added support for Vector2 and Vector3 preferences

v4.2

	Game Framework Core - Improvements
	- Debugging: CheatFunctions editor improved for Unity Dark Skin
	- Demo: Added character selection scene
	- Dialogs: DialogInstance support for an arbitrary number of text buttons.
	- Display: Removed deprecated LOD component. Use LevelOfDetail instead.
	- EditorExtras: Added SplitCamelCase method for pretty printing of strings.
	- GameFramework: Added Component Help window for information about and ease of adding components.
	- GameStructure: Added EnableBasedUponXxx components with selectable conditions for setting enable / disable criteria.
	- GameStructure: Added UpdateMessage that is sent every frame by GameManager
	- GameStructure: BuyGameItem button added
	- GameStructure: GameItemButton uses GameItemContext
	- GameStructure: GameItemButton selection buttons allow for enabling clicking to unlock / buy locked items
	- GameStructure: GameItemButton selection buttons allow for configuring all dialogs
	- GameStructure: GameItemButton option to use legacy display mode (will be deprecated in the future) or new setup with context based components.
	- GameStructure: GameItemContextBaseRunnable RunMethod removed first parameter - reference base.GameItem instead.
	- GameStructure: GameItemsManager - renamed several methods relating to unlocking for consistency..
	- GameStructure: Levels, Worlds and Characters in GameManager are always initialised but with empty Items array
	- GameStructure: ShowXxxInfo components rewritten to use Context
	- GameStructure: ShowXxxInfo components now use LocalisableText
	- GameStructure: ShowXxxInfo components support a new parameter {3} - Value to unlock
	- GameStructure: SetSprite will fallback to a default sprite if there isn't one setup for the specific type.
	- GameStructure: Added some test scenes for GameItem buttons and unlocking
	- GameStructure: UnlockGameItemButton improvements and new configuration options
	- GameStructure: UnlockGameItemButton -. updated localisation texts and options
	- GameStructure: UnlockGameItemButton - added DisableIfCanNotUnlock option if you want to let users click even when they can't unlock and prompt them to collect coins.
	- Helper: ScriptableObjectContainer added UseScriptableObject flag incase you don't want to use scriptable objects
	- Input: Deprecated OnMouseClickOrTapLoadLevel & OnEscapeLoadLevel - Use more appropriately named OnMouseClickOrTapLoadScene & OnEscapeLoadScene instead.
	- Messaging: Methods to add / remove listener directly by message Type.
	- Messaging: Added options for indicating a message shouldn't be shown in the editor log
	- Themes: Corrected Minimalist character button by removing stars
	- Themes: Added Text buttons to default General Message prefab
		
	Game Framework Core - Fixes
	- GameStructure: Fix for incorrect removal of event handler in EnableBasedUponSelected
	- GameStructure: ShowXxxPrefab fix for possible display of selected rather than specified prefab
	- GameStructure: Fix for getting an old context when using a reference to another context of type selected.
	- GameStructure: Plain CharacterButton prefab removed unused stars
	- Localisation: Fix for LocalisableTextDrawer not showing correctly when indented.
	- Themes: Fix for Minimalist theme selection buttons where ValueToUnlock was not always showing on in Unity 5.5
	- UI: Fix for TimeRemaining component not showing correct time on start
	
	Game Framework Extras (Extras Bundle) - Improvements
	- Themes: Added text button options to all themed GeneralMessage windows.
	- Themes: Space GeneralMessage prefab was incorrectly referencing a couple of Cartoon sprites

v4.1.1

	Game Framework Core - Improvements
	- Display: Added Xy Plane to Position Helper
	- GameStructure: Added GameItemContext object and components for setting context of other components to operate within.
	- GameStructure: GameItemManager is IEnumerable (use now by CreateGameItemButtons components) and exposes EnumeratorCurrent for use with GameItemContext
	- GameStructure: Added EnableBasedUponSelected and EnableBasedUponUnlocked components
	- GameStructure: SetImageToSprite and SetSpriteRendererToSprite now use GameItemContext - Verify settings on old instances of these components!
	- GameStructure: Some GetSprite methods made obsolete to allow for easier expansion.
	- GameStructure: Different defaults for Level StarTargets
	
	Game Framework Core - Fixes
	- GameStructure: Pooled items added from colliders don't use collider transform incase that is disabled.
	- GameFramework: Diverse aesthetic improvements when using Unity Pro Skin.
	
	Game Framework Tutorials (Extras Bundle) - Improvements
	- 2DInfinateRunner: Updates to work with new unlock modes.
	- Getting Started Tutorial: Updates to work with new unlock modes.
	- Getting Started Tutorial: Added Part 9

v4.1

	Game Framework Core - Improvements
	- Demo: Updated GameStructure demo with new player material and showprefab updates
	- Demo: Updated for new unlock modes
	- Editor: Added EditorHelper TryAddParseRange method
	- GameStructure: CreateGameItemButtons - added options for overriding selection mode and ClickUnlockedSceneToLoad
	- GameStructure: Added SelectionPreview prefab type
	- GameStructure: InstantiatePrefab[prefab type] methods made obsolete - use parameterised version instead.
	- GameStructure: GameItemButton validation checks and highlight of selected changed from image -> gameobject
	- GameStructure: ShowPrefab components for all GameItems for showing an associated prefab while listening for selection changes.
	- GameStructure: GameItemManager - Added SelectNext and SelectPrevious methods + code refactor
	- GameStructure: GameItemManager - new methods CanCoinUnlockNewItem, GetItemToCoinUnlock, CoinUnlockableItem
	- GameStructure: GameItemManager is enumerable
	- GameStructure: Added LevelChangedMessage, CharacterChangedMessage, WorldChangedMessage messages that are sent when the selected item is changed
	- GameStructure: Added GameItem unlock configuration options
	- GameStructure: Clicking a locked item shows different messages depending on GameItem unlock options
	- GameStructure: New coin unlock modes UnlockButtons: RandomAll, RandomLocked and NextLocked
	- GameStructure: Added ClickToUnlock option to GameItemButton and CreateGameItemButtons to allow clicking to coin unlock.
	- GameStructure: Deprecation of GameManager unlock modes - in future this will default to unlock by completion. Use GameItem configuration files and new UnlockXxx settings instead.
	- GameStructure: Initial configurable GameItem Variables support
	- GameStructure: New GameItemContext that will in future allow the same components to work on selected item, item by number and more.
	- Localisation: Added LocaliseSpriteRenderer component
	- Localisation: Preview of localisation editor window.
	- Localisation: Polish localisation courtesy of Marcin Budek
	- Localisation: Initial support for adding new localisation entries in the editor (just shows the localisation window for now)
	- Themes: Minimalise buttons support Highlight mode.
	
	Game Framework Core - Fixes
	- GameStructure: Fix for PlayerChangedMessage parameters being swapped
	- GameStructure: Clone loaded GameItem configurations so we don't update the original in editor mode.
	- Facebook: FacebookManager fix for handing a single app request returning a string rather than an array
	
	Game Framework Tutorials (Extras Bundle) - Improvements
	- Localisation: Shows usage of Localising Images
	- Localisation: Updated tutorial to include Polish example

v4.0.1

	Game Framework Core - Improvements
	- GameStructure: GameManager WorldBottomLeftPositionXYPlane and WorldTopRightPositionXYPlane properties added
	- Game Structure: GameItems will use a default Name rather than the key if localisation is specified, no key is set and a key in the default format is not found.
	- Localisation: LocaliseText.Get() optional parameter to return null instead of the key as the returned value if the key is not found.
	
	Game Framework Core - Fixes
	- Demo: Coins displayed is the same as needed to win
	- Demo: Corrected About Demo Player configuration path so it doesn't override your own configuration file.
	- Demo: Changed debug level in Game Structure demo from Information to Warning..
	- Themes: Fix for missing default minimalist level, character and world button prefab sizes
	- Dialogs: DialogInstance Assert for missing DialogManager
	- UI: Plain Pause Window prefab was not correct.
	- UI: OnButtonClickPauseLevel moved to UI/Dialogs Add Component section.
	
	Game Framework Extras (Extras Bundle) - Improvements
	- Themes: Add pause icon and Pause Window prefabs

	Game Framework Extras (Extras Bundle) - Fixes
	- GameStructure: Corrected namespace and path for ShakeScreenWhenLivesLost component. If you get compile errors delete the old copy of ShakeScreenWhenLivesLost.cs
	
	Game Framework Tutorials (Extras Bundle) - Improvements
	- Demo: Updated GettingStarted demos to reflect latest v4 updates.


v4.0
IMPORTANT: This version changes several API's and all namespaces. See the seperate upgrade notes document for more details.
If upgrading you should take a backup copy and will then need to delete the old /FlipWebApps/ folder to cater for conflicts.

	Game Framework Core - Improvements
	- All: namespace base of all items is changed from 'FlipwebApps.GameFramework.Scripts' -> 'GameFramework' for simplicity you should rename all references in your code accordingly.
	- Demo: Updated for new GameItem configuration files.
	- EditorExtras: Removed EditorList in favour of built in Unity option (download from http://catlikecoding.com/unity/tutorials/editor/custom-list/ if you still need this).
	- EditorExtras: Added general GuiStyles
	- GameStructure: GameItems now inherit ScriptableObject and can be created directly in resources removing the need for GameItemExtensions. If you have GameItemExtensions then you will need to create new items in resources and copy values over.
	- GameStructure: GameItem editor windows includes Sprite and Prefab settings and localised strings
	- GameStructure: GameItem methods for getting Sprites and Prefabs added
	- GameStructure: GameItem JSON loading for standard GameItem configuration is removed in favour of GameItem objects although renamed methods for using JSON files remain for your own usage.
	- GameStructure: GameItem predefined GameItem sprite type of Selection screen, UnlockWindow for customisation of selection and unlock window sprites.
	- GameStructure: GameItemExtension is removed and you can now create GameItem instances directly in the resource folders. If you inherited from GameItemExtension before then inherit directly from the corresponding GameItem (e.g. Level). You will also (unfortunately) need to re-create and configure any resource files.
	- GameStructure: GameItemExtensions (new type) are loaded from files in the format Type_x_Extension
	- GameStructure: GameItemButtons use GameItem sprites for display if configured
	- GameStructure: GameManager Player functionality switched to use standard GameItemsManager
	- GameStructure: GameManager GetPlayer() and SetPlayerByNumber() methods deprecated. Use methods on GameManager.Instance.Players instead.
	- GameStructure: GameManager IsPaused property removed. Use the new methods on LevelManager instead.
	- GameStructure: GameItemsManager Load() / LoadItems() renamed to LoadCustom() / LoadCustomItems()
	- GameStructure: GameItemsManager LoadDefaultItems() renamed to Load()
	- GameStructure: GameItemsmanager moved to .ObjectModel namespace
	- GameStructure: GameItemsmanager added OnSelectedChanged() virtual method.
	- GameStructure: GameItemsManager renamed to GameItemManager (also other references / methods in other files to match)
	- GameStructure: GameItemManager virtual method for custom handling when the current selection is changed (e.g. sending a custom message)
	- GameStructure: GameItemManager only send selection changed messages if loaded and the value actually changes.
	- GameStructure: GameItemManager tries by default to load GameItems rather than creating dynamically.
	- GameStructure: GameManager load from resources flags now refers to loading Json / Extension files.	
	- GameStructure: Generic Collider supports spawning items from Pro Pooling
	- GameStructure: Added InstantiatePrefab, InstantiatePlayerlPrefab, InstantiateWorldPrefab, InstantiateLevelPrefab, InstantiateCharacterPrefab components to automatically create GameItem prefab instances
	- GameStructure: Player specific PlayerGameItemManager added that sends PlayerChangedMessage when the selection is changed.
	- GameStructure: LevelManager checks for invalid configuration
	- GameStructure: LevelManager Pause() and Resume() methods and IsLevelPaused flag added
	- GameStructure: Level CoinTarget property and LevelManager GameWonWhenTargetCoinsReached auto win option
	- GameStructure: Support for localised per-GameItem Sprite and Prefab settings.
	- GameStructure: Better support for localised name and description.
	- GameStructure: Moved GameItem abstract classes to .AbstractClasses folder
	- GameStructure: Added SetImageTo[GameItem]Sprite and SetSpriteRendererTo[GameItem]Sprite components
	- Localisation: Added LocalisableText class for text that can optionally be localised
	- Localisation: LocaliseText added ReloadDictionary(), TrySetAllowedLanguage() methods
	- Localisation: Exists will try and load dictionary if not already loaded.
	- Localisation: Added LocalisableText, LocalisableSprite and LocalisablePrefab classes
	- Localisation: Added LocaliseImage component

	Game Framework Core - Fixes
	- Localisation: LocaliseText fix for missing initialise of AllowedLanguages array in constructor
	
	Game Framework Tutorials (Extras Bundle) - Improvements
	- Advanced Extending Levels tutorial is removed as focus will be on the 'new way' of doing this in v4
	- 2D Infinite Runner and Basic Demo updated to work with v4.
	
	Prefs Editor (Extras Bundle): Updated to v2.1

	Pro Pooling (Extras Bundle): Updated to v2.1


v3.4.1

	NOTE: This version contains some API changes to ProPooling and may require minor code changes. See below for details. If upgrading you 
	will likely need to delete the old /FlipWebApps/ProPooling folder to cater for possible conflicts.

	Game Framework Core - Improvements
	- GameStructure: Added level score target property, options to specify in level extensions and auto win option to LevelManager
	- Helper: Updated documentation, comments and tooltips
	- Input: Updated documentation, comments and tooltips.
	- Input: Moved OnMouseClickOrTap abstract class to AbstractClasses namespace / folder.
	- Social: General clean-up, updated documentation, comments and tooltips.
	- Social: Added new  components EnableBasedUponNumberOfGamesPlayed and EnableBasedUponModulusOfGamesPlayed
	- Game Structure: General clean-up, updated documentation, comments and tooltips.
	- UI: General clean-up, updated documentation, comments and tooltips.
	- UI: Moved SyncState to AbstractClasses subfolder / namespace.
	- UI: ScrollRect Immediate property is removed as it is redundant. Just set time to 0 instead.
	- Social: Default text shown if platform not iOS / Android.

	Game Framework Core - Fixes
	- Theme: Fix for incorrect colours on Minimalist theme feedback dialog button
	- UI: General clean-up, updated documentation, comments and tooltips.
	- UI: DialogInstance DialogGameObject renamed to Target and made optionally settable through the inspector

	Game Framework Tutorials (Extras Bundle) - Improvements
	- Scrolling: Updates to work with Pro Pooling 2.0

	Pro Pooling (Extras Bundle): Updated to v2.1 that includes:
	- Components: IPoolComponent interface methods now have PoolItem as a parameter. Add this to any custom implementations.
	- Components: Added ReturnToPoolAfterDelay to automatically return pool items to their pool after a specified delay.
	- Components: changed namespace from FlipWebApps.ProPooling.Scripts.Components to ProPooling.Components
	- Demo: Added Auto return to pool after delay demo.
	- Pooling: changed namespace for pooling classed from FlipWebApps.ProPooling.Scripts to ProPooling
	- Pool: Updated Documentation
	- Pool: Added Name property
	- Pool: ID automatically returns Prefab Instance ID
	- Pool: Created pool items have same name as prefab
	- Pool: Pool is no longer declared as a generic type for simplicity. Rename references of Pool<PoolItem> to Pool. See also PoolGeneric.
	- Pool: Added PoolGeneric class that inherits from Pool for use with custom PoolItem derived classes.
	- Pool: IReturnToPool is removed. Just reference Pool instead.
	- PoolManager: Methods are no longer static and must be accessed through PoolManager.Instance.
	- PoolManager: Allow referencing pools by name
	- PoolManager: Allow adding new pools for management
	- PoolManager: Check for pools with missing prefab before setup
	- PoolManager: Added GetFromPool, GetPoolItemFromPool and ReturnToPool methods to indirectly get and return items from / to the different pools.
	- Poolmanager: Updated editor window allowing for drag and drop of prefabs to create new pools

v3.4

	Game Framework Core - Improvements
	- Demo: Updated game scene to use new Colliders classes for coins and health.
	- GameStructure: Added new Colliders classes for Coins, Points, Health and Generic usage.
	- GameStructure: Removed beta Collectables classes (see replacement Colliders classes)

	Game Framework Core - Fixes
	- Display: Removed ParticlePlayer warning in Unity 5.5+
	- GameStructure: Changed Level StarsWonCount from method to property
	- GameStructure: Fix for health being reset when no lives are left
	- GameStructure: Fix for immediate level completion when re-entering a level with 'auto win when all stars got'

	BeautifulTransitions (Extras Bundle): Updated to v4.1 that includes amongst others (see seperate readme for more):
	- Demo: Added Camera Cross Fade / Wipe demo
	- Demo: SceneSwap demo now demonstrates use of cross scene transitions
	- Demo: GameObjectTransitionsDemo demo now demonstrates use of sprite fading
	- Transitions: Added Camera Cross Fade / Wipe
	- Transitions: Cross scene transitions added for scene wipes and fades
	- Transitions: Fade now works with Sprites.
	- Transitions: All components have updated namespaces and are move under FlipWebApps.BeautifulTransitions.Scripts.Transitions.Components.xxx
	- Transitions: All abstract classes and components have updated namespaces and are move under FlipWebApps.BeautifulTransitions.Scripts.Transitions.Components.xxx.AbstractClasses
	- Transitions: TransitionHelper added TakeScreenshot and LoadScene methods.
	- Transitions: TransitionStep Completed method renamed TransitionCompleted
	- Transitions: TransitionStep TransitionInternal method renamed TransitionLoop
	- Transitions: TransitionStep SetProgress call moved from Start to TransitionLoop for better control

v3.3.1

	Game Framework Core - Improvements
	- Demo: GameStructure demo updated to allow winning when all stars collected
	- GameStructure: Initialise StartStarsWon on setup so it is available immediately.
	- GameStructure: Added Level StarsWonTotalCount() method
	- GameStructure: Added tooltips
	- GameStructure: Levelmanager GameWonWhenAllStarsGot option added
	- GameStructure: Addition of GenericGameItemManager and inspector for auto setup of GenericGameItems
	- GameStructure: When using Worlds any Levels are preloaded (lazy loading to come soon), cached and available through the World.Level property
	- GameStructure: World LevelStarCountTotal property added for getting a total count of all level stars obtained.
	- Integrations: Addition of PlayMaker integration
	
	Game Framework Core - Fixes
	- GameStructure: GameManager incorrectly used CoinsToUnlockLevels rather than CoinsToUnlockWorlds for autocreated worlds
	- GameStructure: StarsTotalCount changed from float to int
	
	Game Framework PlayMaker Extensions (Extras Bundle) - New Asset Added

v3.3

	Game Framework Core - Improvements
	- Demo: New demo of usage
	- Themes: New minimalist theme
	- GameStructure: LevelManager allows for automatic losing when Target Time is reached
	- GameStructure: Improved code comments
	- UI: TimeRemaining supports count up / down from level TargetTime
	- UI: Warn if Text component is not specified or available as a sibling component
	
	Game Framework Core - Fixes
	- Facebook: Fix for crash when using Publish Actions Permission
	- Free Prize: Fix for value being 0 on the first run when using SaveAcrossRestarts
	- GameStructure: Fixed namespace for ShowCharacterInfo
	
v3.2

	Game Framework Core - Improvements
	- Audio: Added notification messages for when global background / effect volume changes
	- Audio: Added CopyBackgroundVolume component
	- Audio: CopyGlobalEffectVolume component now has volume multiplier and reacts to volume changes.
	- Facebook: Fix to return correct error code if ShareLink fails.
	- Game Framework: Editor 'Create' items grouped under a submenu.
	- GameStructure: Improved code comments
	- GameStructure: GameItemExtensions and editors for Character, Level, Player and World
	- GameStructure: Additon of Level Progress, ProgressBest, TimeTarget (automatically settable through extensions) and TimeBest
	
	Game Framework Core - Fixes
	- GameStructure: Fixed namespace for ShowCharacterInfo
	- GameStructure: Rename of GameItem ParseLevelFileData to ParseData (as it is not necessarily for a level)
	
	Game Framework Tutorials (Extras Bundle) - Improvements
	- GameStructure: Update for renamed GameItem ParseData method
	
	BeautifulTransitions (Extras Bundle): Updated to v3.2 that includes (see seperate readme for more):
	- Transition: Deprecated MoveTarget TransitionStep as the functionality is provided by Move (Note: MoveTarget component remains)
	- Transition: Added option to specify the axis on which MoveTarget should work so you can easier move multiple items (see GameObjectTransitionsDemo)
	- Transition: Moved initial transition setup to before transition call to avoid possible execution order issues when using the API
	- Transitions: Added RepeatWhenEnabled option for auto running transitions multiple times.	

v3.1.1

	Game Framework Core - Improvements
	- Audio: Assert check for valid BackGroundAudioSource
	- Debug: Default debug level is Warning.
	- FreePrize: Added IsShowingFreePrizeDialog property and check when showing dialog so a free prize can't be claimed multiple times.
	- GameStructure: Code cleanup and comments
	- GameStructure: Star handling moved from GameItemButton to LevelButton to reflect underlying objects
	- GameStructure: WorldButton prefabs removed starts display as only valid for levels
	- GameStructure: New CustomNameChangedMessage for when a players custom name changes
	- Localisation: Added German translation courtesy of Lutz Becker
	
	Game Framework Core - Fixes
	- Debug: Fix for incorrectly displayed debug level setting.
	- Facebook: logout button status won't change to login button when user clicked logout.
	- GameStructure: Corrected component menu name for UnlockCharacterButton
	- GameStructure: LevelManager correctly ends the game if health gets to less than zero
	- GameStructure: Player CustomName property added saved to prefs for a customisable name instead of Name which was causing localisation errors.
	- Dialogs: Game Over dialog no longer shows coins to unlock when all levels are unlocked.
	
	Game Framework Tutorials (Extras Bundle) - Improvements
	- Localisation: Added German language demo option
	
	Game Framework Tutorials (Extras Bundle) - Fixes
	- Localisation: Fix for localisation.csv sample file possibly stopping a user defined file loading.

	Prefs Editor (Extras Bundle) - Updated to 2.0.1
	- Fix: Additional conversion check when trying to load values caused by 3rd party values that are base64 encoded.

v3.1

This release contains rewritten Facebook functionality that breaks with the old API. If you used this before then 
you will likely need to make some changes. Please consult the documentation pages for what has changed. 
It is recommended to backup and then delete the old /FlipWebApps folder before updating. 

	Game Framework Core - Improvements
	- Display: Code cleanup, Tooltips and Documentation
	- Display: Added optional offset to CenterInCamera
	- Display: Added option to FixedMovement to move always or only when a level is running
	- Display: Added option to FixedRotation to rotate always or only when a level is running
	- Display: Added DisplayMetrics.IsSystemDpiAvailable()
	- Display: ObjectDestroyer trigger collision correctly adheres to the specified destroy mode.
	- Display: Added new LevelOfDetail component to replace deprecated LOD component
	- Display: Tooltips, comments and refactoring
	- Display: ColorHelper.ParseColorString() supports hex string without leading #
	- Display: ObjectDestroyer supports 3D colliders
	- Display: GradientBackgroundSplitMiddle component is now implemented and working
	- EditorExtras: Code comments, tooltips and cleanup.
	- FreePrize: Comments and Tooltips
	- Facebook: Major rewrite to improve and simplify usage
	- Facebook: ConnectButton component replaced by FacebookConnection
	- Facebook: Old events replaced by messaging system
	- GameFramework: Added startup help window
	- Game Framework: Added Facebook to the integrations window
	- GameObjects: Tooltips, Comments and Documentation
	- GameStructure: Added new DeviceOrientationChangedMessage and ResolutionChangedMessages
	- UI: Gameover updated for new Facebook API changes

	Game Framework Core - Fixes
	- UI: Fix for obsolete Assert in DialoigInstance being triggered in Unity 5.4

	Game Framework Tutorials (Extras Bundle) - Improvements
	- Display: Added Placement sample
	- Facebook: Added usage sample

v3.0

The main focus of this version is code cleanup and removal of obsolete code. It is recommended to backup and then delete 
the old /FlipWebApps folder before updating. If you have any problems or compile errors due to removed code then see the 
below release notes or visit our support forum for help.

	Game Framework Core - Improvements
	- Advertising: Added AdMob support
	- Advertising: Added AdMob ShowHideAdvert compontent
	- Advertising: Added UnityAds.ShowAdvert shortcut method
	- Advertising: Added ShowAdvert component to simply show Unity Adverts
	- Advertising: Updated comments, tooltips, help links and documentation page
	- Animation: Updated comments, tooltips, help links and documentation page
	- Animations: Removed deprecated score specific animations in favor of generic UI animations.
	- Audio: Updated comments, tooltips, help links and documentation page
	- Billing: Updated comments, tooltips, help links and documentation page
	- Billing: Removed deprecated event callbacks in favor of messaging system.
	- Debugging: Removed deprecated cheat functions component
	- Debugging: Updated comments, tooltips, help links and documentation page
	- Display: Removed redundant HexString() method from ColorHelper.
	- GameStructure: Added PlayerChangedMessage when the selected player is changed
	- Internal: Move all GameFramework internal classes to new scripts/GameFramework folder.
	- Localisation: Updated comments, tooltips, help links and documentation page
	- Localisation: Added EnableIfLanguage component
	- Localisation: Removed obsolete OnLocalise event in favor of messaging and LocalisationChangedMessage
	- Prefab: Removed deprecated Score/TotalCoins prefab
	- Preferences: Corrected namespace from ...Scripts.Integrations.Preferences to ...Scripts.Preferences
	- Preferences: Updated comments, tooltips, help links and documentation page
	- UI: Removed previously deprecated FadeLevelManager and ScoreDisplay classes
	- UI: All ShowValueAnimatedMessaging derived classes (e.g. ShowCoins etc..) now react to localisation changes

	Game Framework Core - Fixes
	- UI: Fixes for ShowValueAnimated Immediate mode
	- GameStructure: Assert check in GameManager for valid mainCamera

	Game Framework Tutorials (Extras Bundle) - Improvements
	- Animation: Added animated values sample
	
	BeautifulTransitions (Extras Bundle): Updated to v3.2 pre-release that includes:
	- Transition: Added option to specify the axis on which MoveTarget should work so you can easier move multiple items (see GameObjectTransitionsDemo)
	- Transition: Deprecated MoveTarget TransitionStep as the functionality is provided by Move (Note: MoveTarget component remains)
	- Transition: Updated tooltips

v2.5

	Game Framework Core - Improvements
	- Advertising: Improved AdMob support
	- EditorExtras: Added EditorHelper LinkButton() helper method
	- EditorExtras: Added PlayerSettingsHelper class for dealing with Player Settings.
	- Free Prize: Allow for persisting next free prize times across game restarts.
	- Free Prize: Added tool tips and source code documentation updates
	- General: Support for secure player prefs including migration of unsecured values (enable in GameManager).
	- GameOver: Added option for automatically updating the player score / coins from the level ones
	- GameStructure: Added option to enable encrypted preferences and provide password
	- Integrations: Added window for managing integrations with other assets
	- Localisation: Sends new LocalisationChanged message when the localisation changes.
	- Messaging: RunOnMessageAttribute added and RunOnMessage updated to be able to run at various lifecycle stages.
	- Preferences: Added support for replacement PlayerPrefs assets
	- Preferences: Added support for encrypted preferences

	Game Framework Core - Fixes
	- GameStructure: GameManager.IsUnlocked is correctly saved if set through code.
	- GameStructure: GameItem Buttons now listen for localisation changed messages.
	- GameStructure GameItem localised values retrieved when requested to avoid caching issues and allow for localisation changes.
	- Helper: Removed invalid Debug.WriteLine call used in certain builds.
	- WIndows Phone: Several updates to fix compile errors for Windows Phone
	
	Game Framework Extras (Extras Bundle) - Improvements
	- Various minor tutorial fixes

	Game Framework Tutorials (Extras Bundle) - Improvements
	- Free Prize: Removed use of deprecated ShowScore component.
	
	BeautifulTransitions (Extras Bundle): Updated to v3.1 that includes:
	- Demo: Added attention button to the DisplayItem demo scene
	- Demo: Shake demo updated with visual controls for modifying the shake settings
	- DisplayItem: Removed unnecessary DisplayItemSetInitialState component
	- DisplayItem: Added SetAttention and SetActiveAnimated functions to DisplayItemHelper.cs
	- General: Added links to documentation and support to the editor menu
	- Shake: Moved scripts from ShakeCamera to Shake folder and namespace.
	- Shake: Improved tooltip text for ShakeCamera component
	- Shake: Renamed Shake method to ShakeCoroutine and added new replacement Shake method that is callable from code.
	- Shake: Code documentation improved
	- Transitions: Updated component menu name
	- Transitions: Screen & Camera wipes now support smoothing.

	Prefs Editor (Extras Bundle): Updated to v2.0 that includes:
	- Support for encrypted player prefs including optional auto encryption of old unencrypted values

v2.4

NOTE: To update you will need to remove the old /FlipWebApps/BeautifulTransitions/ folder before updating, or delete the file 
/FlipWebApps/BeautifulTransitions/Scripts/Transitions/GameObject/TransitionMoveAnchoredPosition.cs after updating.

	Game Framework Core - Improvements
	- EditorExtras: Menu cleanup
	- GameStructure: Added OnLifeLostEnableGameobject component
	- Localisation: Added portuguese and spanish translations (Thanks to Bryan Jonson)
	- Localisation: French translation courtesy of Fabrice Pilet
	- Localisation: Added Chinese translation courtesy of luochuanyuewu.
	- Localisation: Support for specifying the language to get text for (rather than just the currently set one)
	- Messaging: Added description to all messages for display in message log.
	- Messaging: Improved Message Activity window including message details when an entry is selected
	- Messaging: Show call stack in message window detail view.
	- UI: Settings window shows the language with the localised name
	
	Game Framework Tutorials (Extras Bundle) - Improvements
	- Localisation: Updated tutorial for new languages
	- GettingStarted: Added getting started part 8 tutorial files as an extension of part 6-7
	
	BeautifulTransitions (Extras Bundle): Updated to v3.0 that includes:
	- Rewritten from the ground up to expose the whole API through scripting including calls and notifications.
	- GameObject: Removed deprecated TransitionMoveAnchoredPosition component
	- Demo: New scripting demo
	- Demo: Added auto transition in / out button to GameObject demo

	Prefs Editor (Extras Bundle): Updated to v1.0.1 that includes:
	- Fix for OSX path and key format

v2.3

	Game Framework Core - Improvements
	- All: Added all components to editor component menu and added editor help link
	- Debugging: Option to show all current player prefs
	- Debugging: Deprecated Cheat Functions component in favor of Cheat Functions Window
	- Debugging: Added star options to cheat functions window.
	- Debugging: Improved checks before showing level cheat options.
	- Display: Added Color HSV with Lerp support
	- EditorExtras: Added methods to quickly get new label styles
	- EditorExtras: Added ButtonTrimmed with texture
	- GameStructure: Changed GameItemsManager constructor to use MyDebug to avoid spamming the console
	- GameStructure: Option to give health bar a value specific color tint
	- GameStructure: Added DecreaseLivesWhenHealthIsZero component
	- GameStructure: Added StarsWonHandlerCoins and StarsWonHandlerScore components for coin and score based stars
	- GameStructure: Added several prefabs for Lives, Health and Stars
	- GameStructure: Added StarWon method for checking if a star is won.
	- GameStructure: Fix for IsStarWon not returning correct value.
	- GameStructure: Added StarIcon prefab
	- GameStructure: Record stars won before the level starts for later use
	- Messaging: Added statistics to the Messages Window
	- Messaging: Minor UI improvements for messages editor window
	- Sprites: Added default white rectangle and grey gradient sprites
	- UI: Added default show star condition to Game Over dialog
	
	Game Framework Core - Fixes
	- Debugging: Fix for double assign of health in cheat functions window
	- GameStructure: Changed update messaging from Trigger to Queue to allow existing messages to be processed first.
	- GameStructure: Fix for execution order in CreateStarIcons by changing Awake->Start
	
	Game Framework Extras (Extras Bundle) - Improvements
	- GameStructure: Added ShakeScreenWhenLivesLost component
	- Themes: Added several prefabs for Lives, Health and Stars
	- Themes: Added health bar images
	- Themes: Added white and grey gradient images

	Game Framework Extras (Extras Bundle) - Fixes
	- Scrolling: Corrected namespace
	- Themes: Updates to remove use of deprecated Beautiful Transitions components
	
	Game Framework Tutorials (Extras Bundle) - Improvements
	- GettingStarted: Added part 7 tutorial files as an extension of part 6
	
	Game Framework Tutorials (Extras Bundle) - Fixes
	- Various: Updates to remove use of deprecated Beautiful Transitions components

	Prefs Editor (Extras Bundle) - New asset now included in the extras bundle

v2.2.2

	Game Framework Core - Improvements
	- Billing: Seperated out product purchased code and exposed through Cheat Functions window for easy testing
	- Debugging: Support for specifying the debug level
	- EditorExtras: Fix for build error due to reference to UnityEditor
	- EditorExtras: Added namespace to ConditionalHideAttribute and Property Drawer.
	- EditorExtras: Added EditorHelper class with useful Editor related helper functions
	- GameStructure: Added IsInitialised property to GameManager.
	- GameStructure: Added DebugLevel option to GameManager settable through the inspector.
	- GameStructure: Added GameUnlockedMessage which is generated by GameManager IsUnlocked changes
	- GameStructure: Removed GameManager IsUnlocked from inspector as this can now be set through the cheat functions window.
	- GameStructure: Added EnableBasedUponGameUnlocked component
	- Messaging: Improved editor window

	Game Framework Core - Fixes
	- GameStructure: For for incorrect assertion
	- Messaging: Fix for error when building
		
	BeautifulTransitions (Pro Bundle): Updated to v2.3 that includes:
	- Editor: Simplified inspector UI
	- GameObject: Support for global and local rotations
	- GameObject: New TransitionMove component with support for global, local and anchored position values.
	- GameObject: Deprecated TransitionMoveAnchoredPosition in vavour of new TransitionMove component.	


v2.2.1

	Game Framework Core - Improvements
	- Billing: Updated to use new messaging functionality.
	- GameStructure: Added Player.IsGameWon property including GameWonMessage.
	- GameStructure: Added Game\GameHelper with various glabal gamestructure related functions.
	- GameStructure: GameItem specific bool setting support.
	- GameStructure: GameItem button uses messaging to get coin changes. 
	- GameStructure: GameItem improved completion unlock mode handling.
	- GameStructure: GameItem AddedGetNextItem functions
	- GameStructure: Added SafeAddListener and SafeRemoveListener shortcut methods to GameManager.
	- GameStructure: GameManager SafeQueueMessage and SafeTriggerMessage methods correctly check if the GameManager is active.
	- Messaging: Added basic message event log window.
	- UI: Start of support for new GameOver completion messages.
	
	Game Framework Core - Fixes
	- Billing: Fix for invalid call to constructor with 1 argument after v2.0 update.
	- GameStructure: corrected (reduced) unlock delay in LevelUnlockButton
	- UI: Incorrect naming caused IOS builds to break in OnButtonCLickLoadUrl
	
	Game Framework Extras (Pro Bundle) - Improvements
	- Themes: Updated GameOver prefabs with new completion messages.
	

v2.2
	Game Framework Core - Improvements
	- Debugging: Cheat functions changed to tabbed window to give more space.
	- GameManager: Added SafeQueueMessage() and SafeTriggerMessage() as a shorthand so you don't need to check if GameManager is setup.
	- GameStructure: Moved StarsWon from GameItem to Level as it is unlikely to be needed elsewhere.
	- GameStructure: Level specific messaging overrides for changes to levels and coins.
	- GameStructure: GameItem messaging for changes to score, highscore and coins.
	- GameStructure: Added optional game over conditions to LevelManager including when lives = 0 and health = 0
	- GameStructure: Player messaging for changes to lives, health, score, highscore and coins.
	- GameStructure: Added Player ShowHealth, ShowCoins, ShowHealthImage, ShowHighScore, ShowPlayerIngo, ShowScore.
	- GameStructure: Added Level CreateStarIcons, EnabledBasedUponNumberOfStarsWon, ShowLevelCoins, ShowLevelHighScore, ShowLevelScore components, 
		and added messaging for Coins, HighScore, Score and Stars Won changes.
	- GameStructure: Changed all Level and Player Showxxx() methods to react to messaging rather than relying on update loops and continual polling.
	- Messaging: Added Dummy message and RunOnMessage abstract component for simply taking an action on a message.
	- UI: Deprecated FadeLevelManager and ScoreDisplay in favour of better alternatives.
	- UI: Added ShowValueAnimatedMessaging abstract class to show a (optionally animated) value based upon a message notification

	Game Framework Core - Fixes
	- Various minor namespace and spelling corrections
	- RunOnmessage correctly checks if GameManager is active before removing listener.

	Game Framework Tutorials (Pro Bundle) - Improvements
	- Demo: All demos updated for new notification based ShowXXX GameStructure components
	
	BeautifulTransitions (Pro Bundle): Updated to v2.2 that includes:
	- Exposed Transition Start and Complete events through the inspector so you can easily hook up other code.
	- Demo: Added Events Demo
	- Demo: Added SceneSwap Demo
	- Fix for shaders sometimes missing from final build.


v2.1

IMPORTANT NOTE: We changed the GameManager Auto Create Levels option to false. If
you suddently find that your levels aren't showing then you may need to enable this
option on your GameManager component! 

	Game Framework Core - Improvements

	- Demo: Updated to show v2.0+ features.
	- Editor: improved editor list control with box and text overrides
	- GameStructure: GameManager default to not auto creating levels and setting player lives to 3
	- GameStructure: Added CreateLivesIcons component and life icon prefab. Assert for GameManager in all life components
	- GameStructure: ShowLives component for showing number of lives with optional animated changes.
	- Messaging: Added global messaging system
	- UI: New ShowValueAnimated base class with sample animations

		
	Game Framework Extras (Pro Bundle) - Improvements
	
	- Themes: Various display improvements on all themes.
	- Themes: Added life prefabs and icons.

	
	Game Framework Extras (Pro Bundle) - Fixes
	
	- GameStructure: Fix for animated particles not showing on level unlock.
	- Scrolling: Updates for pro pooling api changes.

	
	Game Framework Tutorials (Pro Bundle) - Improvements
	
	- GameStructure: Moved level resource images to samples where they are used
	- Tutorials: Updated Getting Started Part 6 - Visual improvements and navigation fixes
	- 2DInfinateRunner: Added camera shake on crash

	
	Game Framework Tutorials (Pro Bundle) - Fixes
	
	- Getting Started Tutorials: Various visual improvements and fixes

	
	BeautifulTransitions (Pro Bundle): Updated to v2.1.1 that includes:

	- Shake Camera: Added ShakeCamera component and shake helper for shaking other gameobjects.
	- Code refactor improvements (some shared script files moved to the Helper folder)
	- Under certain build conditions the shaders would not be included. Moved shaders to a 
	resources folder and improved load validation.

	
	Pro Pooling (Pro Bundle): Updated to v1.1 that includes:
	NOTE: This version contains some minor API changes needed to improve the functionality. 
	You may need to make a couple of small code changes. See below for details.	

	- New graphical demo showing generics, and delegated pool returns.
	- PoolItem lifecycle methods renamed - prefixed with 'On'
	- Added IReturnToPool interface with reference in PoolItem and ReturnSelf() method.
	- Pool - some items reworked around PoolItem to enable delegated references.
	- Added custom pool inspector.


v2.0

IMPORTANT NOTE: This version includes some unavoidable breaking changes to allow 
for supporting new features. You might need to reconfigure some items or perform 
minor code changes. In particular the number of automatically created levels on 
GameManager may need re-entering. You should also first make a backup and then 
delete the old /FlipWebApps/ directory before importing. See below for further details.

	Game Framework Core - Improvements

	- Debugging: Added DrawGizmoRect() method to MyDebug.cs
	- Debugging: Options for handling worlds in Cheat Functions window.
	- Display: GradientBackground lets you specify the top and bottom y position for finer control.
	- EditorExtras: Added HelpBox Decorator drawer
	- EditorExtras: Added custom EditorList - courtesy of catlikecoding.com
	- GameObjects: Added documentation and Random(), IsWithinRange() and Overlap() functions to MinMax.cs
	- GameObjects: Custom MinMax property drawer
	- GameStructure: GameOver method added to LevelManager
	- GameStructure: Added character and world button prefabs
	- GameStructure: Refactor of Game Structure Code.:
		- Simplified access to extended json configuration data from automatic setup mode without needing to create subclasses.
		- Better support for world and character menus and management.
		- Removed need for Level and World GameItemManagers.
		- Updated constructor and instantiating of GameItems.
		- Unlock world buttons.
		- World button sets correct levels if in auto setup mode
		- Localisation for world and character unlock and purchase
	- GameStructure: Reworked Auto Level setup:
		- Option for auto setup of worlds and characters. 
		- Custom inspector. 
		- Tooltips
	- GameStructure: Added Show(Character/Level/World) info component with optional localisation
	- GameStructure: Player lives support:
		- Set default on GameManager
		- Lives per player
		- Buttons in Cheat Functions window
		- Components to reset lives
		- Component to display life icons based upon lives.
	- GameStructure: GameItem - CustomInitialisation virtual method to allow an easy way for sub classes to do initialisation.
	- GameStructure: Level star targets with automatic setting from json configuration.
	- UI: Added option to specify continue screen for GameOver dialog.

		
	Game Framework Core - Fixes
	
	- changed ".tag ==" to ".CompareTag()" for performance in all instances
	- Weighting: Moved weighting framework to top level as it isn't tied to gamestructure.

	
	Game Framework Extras (Pro Bundle) - Improvements
	
	- GameStructure: Added Character and World Buttons to all themes.
	- Scrolling: ParallaxLayer and Parallax Items updated to use the new bundles Pro Pooling asset (see below)
	- Scrolling: Support for weighting and child instance specific spacing

	
	Game Framework Extras (Pro Bundle) - Fixes
	
	- General cleanup and code refactor.

	
	Game Framework Tutorials (Pro Bundle) - Improvements
	
	- Full 2D Infinite Runner Framework: Various updates and improvements.
	- Getting Started Tutorials: Various updates and improvements.
	- Getting Started Tutorials: Added new 'Getting Started Part 6 - Worlds' tutorial.

	
	Game Framework Tutorials (Pro Bundle) - Fixes
	
	- All demos and tutorials updated for latest framework changes
	- General cleanup and minor fixes.

	
	BeautifulTransitions (Pro Bundle): Updated to v2.0 that includes:

	- All previous transition curves are now built in, removing the dependency on iTween and giving improved performance.
	- Updated inspector gui with visual curves.
	- Code refactor improvements (if you experience any build errors with your own derived classes that you don't know how to fix then let us know)
	- Various fixes (see seperate 'Readme - Beautiful Transitions.txt' for full details)

	
	Pro Pooling (Pro Bundle): The Pro Bundle now includes Pro Pooling v1.0
	
	- Now included in the pro bundle.

v1.3
	Game Framework Core - Improvements
	- BeautifulTransitions: Updated to v1.2 that includes:
		- New Rotate UI / Game Object transition. 
		- Transition core code refactor.
		- Added the ability to define your own animation curves.
		- Added Custom Property Editor for improved UI and additional help. 
		- Various fixes (see seperate 'Readme - Beautiful Transitions.txt' for full details)
	- Display: Added SetQuadUVs
	- Editor: Added Conditional Hide property drawer (thanks to Brecht Lecluyse -  www.brechtos.com). 
	- Editor: Moved Editor files to allow better grouping
	- GameObjects: Added MinMax and MinMaxf structures.
	- GameStructure: Added Weighting framework for managing relative object weights over distance / time 
	  and selection of items based upon this. Usage will be demoed in a full infinate scroller game template in the 
	  paid version.
	- GameStructure: Allow specifying of an optional game item specific scene from game item button (e.g. for level).
	- Input: New shared OnMouseClickOrTap base class.
	- UI: Improvements for dialog swapping / transitioning
	- UI: Added OnButtonClickSwapDialogInstance and OnMouseClickOrTapSwapDialogInstance components.

	Game Framework Core - Fixes
	- UI: DialogInstance IsShown state correctly reflects active value

	Game Framework Extras (Paid Version Only) - Improvements
	- Scrolling: Added Scrolling script including manual / automatic scene setup, pooling and reuse of display instances, 
	auto scroll of follow camera, parallex support, for automatic scene setup - relative weightings for displayed gameobjects given 
	distance or time.

	Game Framework Tutorials (Paid Version Only) - Improvements
	- The start of what will be a full 2D infinate scrolling game template with tutorials. (work in progress)

v1.2
	Game Framework Core - Improvements
	- Input: New shared OnMouseClickOrTap base class.
	- UI: Improvements for dialog swapping / transitioning
	- UI: Added OnButtonClickSwapDialogInstance and OnMouseClickOrTapSwapDialogInstance components.

	Game Framework Core - Fixes
	- UI: DialogInstance IsShown state correctly reflects active value

v1.1
	Game Framework Core - Improvements
	- Removed FadeLevelManager as more advanced screen wipes are supported through the bundled BeautifulTransitions asset (paid verions only)
	- Updated the bundled BeautifulTransitions asset to v1.0 that includes:
		- Rewritten core for easier extensibility
		- Added Screen transitions including fade and multiple wipe transitions
		- Added Camera transitions including fade and multiple wipe transitions
		- Added the possibility to create your own custom transitions by uploading a new Alpha texture
		- Added new demo for screen and camera transitions.
	- Updated Demo scene

	Game Framework Extras - Fixes
	- Dialog fixes for updated transitions

v1.0
	Game Framework Core - Improvements
	- Deprecated legacy UI animations and added support for Beautiful Transitions asset (included with paid version)
	- Basic Demo scene added
	- Animation: SetTriggerOnce and SetBoolOnce components for running animations one time
	- Audio: Effect audio effect pooling and simultaneous effect support.
	- GameObjects: Generic EnableOnce component

	Game Framework Core - Fixes
	- Free Prize: Time to Free Prize subscribes to localisation changes

	Game Framework Extras - Improvements
	- UI / Themes: Updated all dialogs to use the new Beautiful Transitions asset.
	- Themes: Basic RPG theme.
	- Themes: Start of basic themes window to help with rebranding.

	Game Framework Extras - Fixes
	
	Game Framework Tutorials - Improvements
	- Advanced 'Extending Level' tutorial added
	- Updated all tutorials to use the new Beautiful Transitions asset.

	Game Framework Tutorials - Fixes

v0.9
	Game Framework Core - Improvements
	- IAP: Component to show / hide gameobjects depending upon whether IAP is enabled.
	- IAP: Support for full game unlock and unlocking of worlds and characters.
	- UI: Dynamic layout support for game over and settings windows.
	- UI: Support for chosing what is shown in game over and settings windows.
	- UI: Sync of button state changes to child text and image components for simpler and improved UI designs
	- Localisation: Language change notification.
	- Localisation: Dynamic settings option for choosing language.
	- Localisation: Button for choosing localisation language.
	- Localisation: Menu option for creating localisation file.
	- Localisation: Norwegian translation added.
	- Game Structure: Manual / automatic world select screen functionality.
	- GameObjects: RunOnState periodic frequency option.
	- GameObjects: GetPath() method.

	Game Framework Core - Fixes
	- Localisation: Fix for missing last character in certain conditions
	- UI: Button components refactored into new location

	Game Framework Extras - Improvements
	- UI: Updated all theme dialogs for dynamic layout and options.
	- Themes: Basic RPG theme.
	- Themes: Start of basic themes window to help with rebranding.

	Game Framework Extras - Fixes
	- UI: Removed old unlocklevel prefab content
	
	Game Framework Tutorials - Improvements
	- Dialog and Localisation tutorials

	Game Framework Tutorials - Fixes
	- Various fixes to several tutorials and bumped to newest prefabs.

v0.8.5
	Game Framework Core - Improvements
	- Animated score prefab
	- Support for animated dialog content
	- Support and enhancements for GameItem unlocking
	- Added free prize buttons to cheat window.
	- Score change animation support
	- GameObjectHelper GetParentNamedGameObject()

	Game Framework Core - Fixes
	- Fixed for incorrect conditional includes
	
	Game Framework Extras - Improvements
	- Added space theme and tutorial
	- New free prize 3D models and tutorial
	- Support for animated dialog content
	- Animated unlock functionality

	Game Framework Extras - Fixes
	- Fixes in several tutorial samples

v0.8
	First public release