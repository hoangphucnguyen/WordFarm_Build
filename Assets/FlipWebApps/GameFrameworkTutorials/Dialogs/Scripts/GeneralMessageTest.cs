//----------------------------------------------
// Flip Web Apps: Game Framework
// Copyright © 2016 Flip Web Apps / Mark Hewitt
//
// Please direct any bugs/comments/suggestions to http://www.flipwebapps.com
// 
// The copyright owner grants to the end user a non-exclusive, worldwide, and perpetual license to this Asset
// to integrate only as incorporated and embedded components of electronic games and interactive media and 
// distribute such electronic game and interactive media. End user may modify Assets. End user may otherwise 
// not reproduce, distribute, sublicense, rent, lease or lend the Assets. It is emphasized that the end 
// user shall not be entitled to distribute or transfer in any way (including, without, limitation by way of 
// sublicense) the Assets in any other way than as integrated components of electronic games and interactive media. 

// The above copyright notice and this permission notice must not be removed from any files.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//----------------------------------------------

using GameFramework.Localisation.ObjectModel;
using UnityEngine;
using GameFramework.UI.Dialogs.Components;

public class GeneralMessageTest : MonoBehaviour {

    public void YesNoDialog()
    {
        DialogManager.Instance.Show(title: "Test Title",
            text: "Yes No Dialog",
            doneCallback: DoneCallback,
            dialogButtons: DialogInstance.DialogButtonsType.YesNo);
    }

    public void OkDialog()
    {
        DialogManager.Instance.Show(title: "Test Title",
            text: "Ok Dialog",
            doneCallback: DoneCallback,
            dialogButtons: DialogInstance.DialogButtonsType.Ok);
    }

    public void OkCancelDialog()
    {
        DialogManager.Instance.Show(title: "Test Title",
            text: "Ok Cancel Dialog",
            doneCallback: DoneCallback,
            dialogButtons: DialogInstance.DialogButtonsType.OkCancel);
    }

    public void CancelDialog()
    {
        DialogManager.Instance.Show(title: "Test Title",
            text: "Cancel Dialog",
            doneCallback: DoneCallback,
            dialogButtons: DialogInstance.DialogButtonsType.Cancel);
    }

    public void CustomDialog()
    {
        var dialogInstance = DialogManager.Instance.Create();
        dialogInstance.Show(title: "Test Title",
            text: "Custom Dialog - This uses autogenerated text buttons. You can also create dialogs with custom images.",
            doneCallback: DoneCallback,
            buttonText: new [] {LocalisableText.CreateNonLocalised("Button 1"), LocalisableText.CreateNonLocalised("Button 2"),  },
            dialogButtons: DialogInstance.DialogButtonsType.Cancel);
    }

    public virtual void DoneCallback(DialogInstance dialogInstance)
    {
        switch (dialogInstance.DialogResult)
        {
            case DialogInstance.DialogResultType.Ok:
                DialogManager.Instance.ShowInfo("Ok Pressed");
                break;
            case DialogInstance.DialogResultType.Cancel:
                DialogManager.Instance.ShowInfo("Cancel Pressed");
                break;
            case DialogInstance.DialogResultType.Yes:
                DialogManager.Instance.ShowInfo("Yes Pressed");
                break;
            case DialogInstance.DialogResultType.No:
                DialogManager.Instance.ShowInfo("No Pressed");
                break;
            case DialogInstance.DialogResultType.Custom:
                DialogManager.Instance.ShowInfo("Custom Button Pressed: " + dialogInstance.DialogResultCustom);
                break;
            default:
                DialogManager.Instance.ShowInfo("Unknown Response (should not happen)");
                break;
        }
    }
}
